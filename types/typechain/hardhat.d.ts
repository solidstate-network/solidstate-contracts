/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IERC173",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC173__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "OwnableMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableMock__factory>;
    getContractFactory(
      name: "SafeOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeOwnable__factory>;
    getContractFactory(
      name: "SafeOwnableMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeOwnableMock__factory>;
    getContractFactory(
      name: "CloneFactoryMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CloneFactoryMock__factory>;
    getContractFactory(
      name: "FactoryMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FactoryMock__factory>;
    getContractFactory(
      name: "MetamorphicFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MetamorphicFactory__factory>;
    getContractFactory(
      name: "MetamorphicFactoryMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MetamorphicFactoryMock__factory>;
    getContractFactory(
      name: "MinimalProxyFactoryMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MinimalProxyFactoryMock__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "ERC165Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Mock__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ECDSAMultisigWallet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ECDSAMultisigWallet__factory>;
    getContractFactory(
      name: "ECDSAMultisigWalletMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ECDSAMultisigWalletMock__factory>;
    getContractFactory(
      name: "Diamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Diamond__factory>;
    getContractFactory(
      name: "DiamondBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondBase__factory>;
    getContractFactory(
      name: "DiamondBaseMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondBaseMock__factory>;
    getContractFactory(
      name: "DiamondBaseStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondBaseStorage__factory>;
    getContractFactory(
      name: "DiamondCuttable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondCuttable__factory>;
    getContractFactory(
      name: "DiamondCuttableMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondCuttableMock__factory>;
    getContractFactory(
      name: "DiamondLoupe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondLoupe__factory>;
    getContractFactory(
      name: "DiamondLoupeMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondLoupeMock__factory>;
    getContractFactory(
      name: "IDiamondCuttable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondCuttable__factory>;
    getContractFactory(
      name: "IDiamondLoupe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondLoupe__factory>;
    getContractFactory(
      name: "ManagedProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ManagedProxy__factory>;
    getContractFactory(
      name: "ManagedProxyMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ManagedProxyMock__factory>;
    getContractFactory(
      name: "ManagedProxyOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ManagedProxyOwnable__factory>;
    getContractFactory(
      name: "ManagedProxyOwnableMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ManagedProxyOwnableMock__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "ProxyMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyMock__factory>;
    getContractFactory(
      name: "ERC1271Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1271Base__factory>;
    getContractFactory(
      name: "ERC1271Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1271Ownable__factory>;
    getContractFactory(
      name: "ERC1271OwnableMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1271OwnableMock__factory>;
    getContractFactory(
      name: "ERC1271Stored",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1271Stored__factory>;
    getContractFactory(
      name: "ERC1271StoredMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1271StoredMock__factory>;
    getContractFactory(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1271__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "ERC1155Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Base__factory>;
    getContractFactory(
      name: "ERC1155BaseMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155BaseMock__factory>;
    getContractFactory(
      name: "ERC1155Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Enumerable__factory>;
    getContractFactory(
      name: "ERC1155EnumerableMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155EnumerableMock__factory>;
    getContractFactory(
      name: "ERC1155Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Mock__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC1404",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1404__factory>;
    getContractFactory(
      name: "ERC1404Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1404Base__factory>;
    getContractFactory(
      name: "ERC1404BaseMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1404BaseMock__factory>;
    getContractFactory(
      name: "ERC1404Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1404Mock__factory>;
    getContractFactory(
      name: "IERC1404",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1404__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Base",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Base__factory>;
    getContractFactory(
      name: "ERC20BaseMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20BaseMock__factory>;
    getContractFactory(
      name: "ERC20Extended",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Extended__factory>;
    getContractFactory(
      name: "ERC20ExtendedMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20ExtendedMock__factory>;
    getContractFactory(
      name: "ERC20ImplicitApproval",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20ImplicitApproval__factory>;
    getContractFactory(
      name: "ERC20ImplicitApprovalMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20ImplicitApprovalMock__factory>;
    getContractFactory(
      name: "ERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Metadata__factory>;
    getContractFactory(
      name: "ERC20MetadataMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20MetadataMock__factory>;
    getContractFactory(
      name: "ERC20Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Mock__factory>;
    getContractFactory(
      name: "ERC20Snapshot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Snapshot__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "ReentrancyGuardMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuardMock__factory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
  }
}
