/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FactoryMock, FactoryMockInterface } from "../FactoryMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "initCodeHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "calculateDeploymentAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "deployment",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "deployment",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610361806100206000396000f3fe608060405234801561001057600080fd5b50600436106100405760003560e01c806277436014610045578063487a3a38146100745780634af63f0214610087575b600080fd5b610058610053366004610297565b61009a565b6040516001600160a01b03909116815260200160405180910390f35b610058610082366004610276565b6100ab565b6100586100953660046102d2565b61010a565b60006100a582610116565b92915050565b604080516001600160f81b03196020808301919091526bffffffffffffffffffffffff193060601b16602183015260358201849052605580830186905283518084039091018152607590920190925280519101206000905b9392505050565b60006101038383610187565b600081602001825180826000f0925050506001600160a01b0381166101825760405162461bcd60e51b815260206004820152601a60248201527f466163746f72793a206661696c6564206465706c6f796d656e7400000000000060448201526064015b60405180910390fd5b919050565b60008260200183518381836000f5925050506001600160a01b0381166100a55760405162461bcd60e51b815260206004820152601a60248201527f466163746f72793a206661696c6564206465706c6f796d656e740000000000006044820152606401610179565b600082601f8301126101ff578081fd5b813567ffffffffffffffff8082111561021a5761021a610315565b604051601f8301601f19908116603f0116810190828211818310171561024257610242610315565b8160405283815286602085880101111561025a578485fd5b8360208701602083013792830160200193909352509392505050565b60008060408385031215610288578182fd5b50508035926020909101359150565b6000602082840312156102a8578081fd5b813567ffffffffffffffff8111156102be578182fd5b6102ca848285016101ef565b949350505050565b600080604083850312156102e4578182fd5b823567ffffffffffffffff8111156102fa578283fd5b610306858286016101ef565b95602094909401359450505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220b0e983015be6115de899be631c373a6febb6bb2c5aee4ef841c8fb595cbce87e64736f6c63430008040033";

export class FactoryMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FactoryMock> {
    return super.deploy(overrides || {}) as Promise<FactoryMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FactoryMock {
    return super.attach(address) as FactoryMock;
  }
  connect(signer: Signer): FactoryMock__factory {
    return super.connect(signer) as FactoryMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FactoryMockInterface {
    return new utils.Interface(_abi) as FactoryMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FactoryMock {
    return new Contract(address, _abi, signerOrProvider) as FactoryMock;
  }
}
