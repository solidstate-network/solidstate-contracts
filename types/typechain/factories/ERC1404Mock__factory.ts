/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC1404Mock, ERC1404MockInterface } from "../ERC1404Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8[]",
        name: "errorCodes",
        type: "uint8[]",
      },
      {
        internalType: "string[]",
        name: "errorMessages",
        type: "string[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "detectTransferRestriction",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "restrictionCode",
        type: "uint8",
      },
    ],
    name: "messageForTransferRestriction",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620014dd380380620014dd83398101604081905262000034916200033c565b6200006482826200004f6200006c60201b6200063e1760201c565b6200009060201b62000662179092919060201c565b5050620004e7565b7f3b29b75d14377b08b5cb9134ca742286d8df5e542ecee06be87bca582006c86190565b8051825114620000d55760405162461bcd60e51b8152600401620000cc90602080825260049082015263544f444f60e01b604082015260600190565b60405180910390fd5b8260005b835181101562000177578281815181106200010457634e487b7160e01b600052603260045260246000fd5b60200260200101518260008684815181106200013057634e487b7160e01b600052603260045260246000fd5b602002602001015160ff1660ff1681526020019081526020016000209080519060200190620001619291906200017e565b50806200016e81620004a9565b915050620000d9565b5050505050565b8280546200018c906200046c565b90600052602060002090601f016020900481019282620001b05760008555620001fb565b82601f10620001cb57805160ff1916838001178555620001fb565b82800160010185558215620001fb579182015b82811115620001fb578251825591602001919060010190620001de565b50620002099291506200020d565b5090565b5b808211156200020957600081556001016200020e565b6000601f838184011262000236578182fd5b825160206200024f620002498362000446565b62000413565b80838252828201915082870188848660051b8a010111156200026f578687fd5b865b858110156200032e5781516001600160401b03808211156200029157898afd5b818b0191508b603f830112620002a557898afd5b8682015181811115620002bc57620002bc620004d1565b620002cf818b01601f1916890162000413565b915080825260408d81838601011115620002e7578b8cfd5b8b5b8281101562000306578481018201518482018b01528901620002e9565b8281111562000317578c8a84860101525b505050855250928401929084019060010162000271565b509098975050505050505050565b600080604083850312156200034f578182fd5b82516001600160401b038082111562000366578384fd5b818501915085601f8301126200037a578384fd5b815160206200038d620002498362000446565b8083825282820191508286018a848660051b8901011115620003ad578889fd5b8896505b84871015620003e057805160ff81168114620003cb57898afd5b835260019690960195918301918301620003b1565b5091880151919650909350505080821115620003fa578283fd5b50620004098582860162000224565b9150509250929050565b604051601f8201601f191681016001600160401b03811182821017156200043e576200043e620004d1565b604052919050565b60006001600160401b03821115620004625762000462620004d1565b5060051b60200190565b600181811c908216806200048157607f821691505b60208210811415620004a357634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415620004ca57634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b610fe680620004f76000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610243578063a9059cbb14610256578063d4ce141514610269578063dd62ed3e1461028057600080fd5b806370a08231146101df5780637f4ab1dd1461021557806395d89b41146102285780639dc29fac1461023057600080fd5b806323b872dd116100d357806323b872dd1461016c578063313ce5671461017f57806339509351146101b757806340c10f19146101ca57600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b6101026102c6565b60405161010f9190610e82565b60405180910390f35b61012b610126366004610e38565b610377565b604051901515815260200161010f565b7fc991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b6545b60405190815260200161010f565b61012b61017a366004610dfd565b61038d565b7f2967a798b92539a1b9eefe4d8eb931f96b68d27665e276f1bee2d5db7f7430495460ff165b60405160ff909116815260200161010f565b61012b6101c5366004610e38565b610447565b6101dd6101d8366004610e38565b61050a565b005b61015e6101ed366004610daa565b6001600160a01b03166000908152600080516020610f71833981519152602052604090205490565b610102610223366004610e61565b610518565b610102610532565b6101dd61023e366004610e38565b610563565b61012b610251366004610e38565b61056d565b61012b610264366004610e38565b610631565b6101a5610277366004610dfd565b60009392505050565b61015e61028e366004610dcb565b6001600160a01b039182166000908152600080516020610f918339815191526020908152604080832093909416825291909152205490565b60607f2967a798b92539a1b9eefe4d8eb931f96b68d27665e276f1bee2d5db7f74304780546102f490610f04565b80601f016020809104026020016040519081016040528092919081815260200182805461032090610f04565b801561036d5780601f106103425761010080835404028352916020019161036d565b820191906000526020600020905b81548152906001019060200180831161035057829003601f168201915b5050505050905090565b600061038433848461073d565b50600192915050565b6001600160a01b0383166000908152600080516020610f9183398151915260209081526040808320338452909152812054828110156104245760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610431853385840361073d565b61043c85858561086f565b506001949350505050565b336000908152600080516020610f91833981519152602090815260408083206001600160a01b0386168452918290528220548381018111156104d65760405162461bcd60e51b815260206004820152602260248201527f4552433230457874656e6465643a2065786365737369766520616c6c6f77616e604482015261636560f01b606482015260840161041b565b61043c33868684018560008a6001600160a01b03166001600160a01b0316815260200190815260200160002081905561073d565b6105148282610a4f565b5050565b606061052c8261052661063e565b90610b58565b92915050565b60607f2967a798b92539a1b9eefe4d8eb931f96b68d27665e276f1bee2d5db7f74304760010180546102f490610f04565b6105148282610bff565b336000908152600080516020610f91833981519152602090815260408083206001600160a01b038616845291829052822054808411156105fd5760405162461bcd60e51b815260206004820152602560248201527f4552433230457874656e6465643a20696e73756666696369656e7420616c6c6f60448201526477616e636560d81b606482015260840161041b565b61043c33868684038560008a6001600160a01b03166001600160a01b0316815260200190815260200160002081905561073d565b600061038433848461086f565b7f3b29b75d14377b08b5cb9134ca742286d8df5e542ecee06be87bca582006c86190565b805182511461069c5760405162461bcd60e51b815260040161041b90602080825260049082015263544f444f60e01b604082015260600190565b8260005b8351811015610736578281815181106106c957634e487b7160e01b600052603260045260246000fd5b60200260200101518260008684815181106106f457634e487b7160e01b600052603260045260246000fd5b602002602001015160ff1660ff1681526020019081526020016000209080519060200190610723929190610cf5565b508061072e81610f3f565b9150506106a0565b5050505050565b6001600160a01b03831661079f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161041b565b6001600160a01b0382166108005760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161041b565b6001600160a01b038381166000818152600080516020610f91833981519152602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166108d35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161041b565b6001600160a01b0382166109355760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161041b565b6001600160a01b0383166000908152600080516020610f718339815191526020819052604090912054828110156109bd5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161041b565b6001600160a01b038086166000908152602084905260408082208685039055918616815290812080548592906109f4908490610ed5565b92505081905550836001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610a4091815260200190565b60405180910390a35050505050565b6001600160a01b038216610aa55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161041b565b7fc991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b68054600080516020610f71833981519152918391600090610ae8908490610ed5565b90915550506001600160a01b03831660009081526020829052604081208054849290610b15908490610ed5565b90915550506040518281526001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610862565b60ff81166000908152602083905260409020805460609190610b7990610f04565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba590610f04565b8015610bf25780601f10610bc757610100808354040283529160200191610bf2565b820191906000526020600020905b815481529060010190602001808311610bd557829003601f168201915b5050505050905092915050565b6001600160a01b038216610c5f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161041b565b6001600160a01b0382166000908152600080516020610f71833981519152602081905260408220805491928492610c97908490610eed565b9250508190555081816002016000828254610cb29190610eed565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610862565b828054610d0190610f04565b90600052602060002090601f016020900481019282610d235760008555610d69565b82601f10610d3c57805160ff1916838001178555610d69565b82800160010185558215610d69579182015b82811115610d69578251825591602001919060010190610d4e565b50610d75929150610d79565b5090565b5b80821115610d755760008155600101610d7a565b80356001600160a01b0381168114610da557600080fd5b919050565b600060208284031215610dbb578081fd5b610dc482610d8e565b9392505050565b60008060408385031215610ddd578081fd5b610de683610d8e565b9150610df460208401610d8e565b90509250929050565b600080600060608486031215610e11578081fd5b610e1a84610d8e565b9250610e2860208501610d8e565b9150604084013590509250925092565b60008060408385031215610e4a578182fd5b610e5383610d8e565b946020939093013593505050565b600060208284031215610e72578081fd5b813560ff81168114610dc4578182fd5b6000602080835283518082850152825b81811015610eae57858101830151858201604001528201610e92565b81811115610ebf5783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610ee857610ee8610f5a565b500190565b600082821015610eff57610eff610f5a565b500390565b600181811c90821680610f1857607f821691505b60208210811415610f3957634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610f5357610f53610f5a565b5060010190565b634e487b7160e01b600052601160045260246000fdfec991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b4c991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b5a2646970667358221220c8131b046ac9e0b015e26402c7107a6aba7d627d373be4bb86cf652f0e1327af64736f6c63430008040033";

export class ERC1404Mock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    errorCodes: BigNumberish[],
    errorMessages: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1404Mock> {
    return super.deploy(
      errorCodes,
      errorMessages,
      overrides || {}
    ) as Promise<ERC1404Mock>;
  }
  getDeployTransaction(
    errorCodes: BigNumberish[],
    errorMessages: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      errorCodes,
      errorMessages,
      overrides || {}
    );
  }
  attach(address: string): ERC1404Mock {
    return super.attach(address) as ERC1404Mock;
  }
  connect(signer: Signer): ERC1404Mock__factory {
    return super.connect(signer) as ERC1404Mock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1404MockInterface {
    return new utils.Interface(_abi) as ERC1404MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1404Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC1404Mock;
  }
}
