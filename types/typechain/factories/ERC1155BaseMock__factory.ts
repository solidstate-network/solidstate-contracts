/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1155BaseMock,
  ERC1155BaseMockInterface,
} from "../ERC1155BaseMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "safeMintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transferBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200004a6301ffc9a760e01b6001620000356200007360201b620008421760201c565b6200009760201b62000866179092919060201c565b6200006d636cdb3d1360e11b6001620000356200007360201b620008421760201c565b62000124565b7f326d0c59a7612f6a9919e2a8ee333c80ba689d8ba2634de89c85cbb04832e70590565b6001600160e01b03198083161415620000f65760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015260640160405180910390fd5b6001600160e01b03199190911660009081526020929092526040909120805460ff1916911515919091179055565b611f0580620001346000396000f3fe608060405234801561001057600080fd5b506004361061010a5760003560e01c806354195a9e116100a2578063a22cb46511610071578063a22cb46514610225578063d81d0a1514610238578063e985e9c51461024b578063f242432a1461025e578063f5298aca1461027157600080fd5b806354195a9e146101d95780635bfe2c76146101ec578063637f68cd146101ff5780636b20c4541461021257600080fd5b806324eeedf6116100de57806324eeedf6146101805780632eb2c2d614610193578063357ac4e4146101a65780634e1273f4146101b957600080fd5b8062fdd58e1461010f57806301ffc9a7146101355780630abb4d1614610158578063156e29f61461016d575b600080fd5b61012261011d36600461185f565b610284565b6040519081526020015b60405180910390f35b610148610143366004611985565b61032a565b604051901515815260200161012c565b61016b610166366004611639565b61035f565b005b61016b61017b366004611888565b610375565b61016b61018e366004611888565b610395565b61016b6101a13660046116ab565b6103b0565b61016b6101b4366004611639565b6103fd565b6101cc6101c73660046118ba565b61040b565b60405161012c9190611aec565b61016b6101e7366004611584565b610651565b61016b6101fa366004611584565b61065f565b61016b61020d3660046117b4565b61066d565b61016b6102203660046117b4565b610688565b61016b610233366004611825565b610693565b61016b6102463660046117b4565b610789565b610148610259366004611552565b6107a4565b61016b61026c366004611751565b6107f1565b61016b61027f366004611888565b610837565b60006001600160a01b0383166102f55760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b600080516020611eb08339815191526000928352602090815260408084206001600160a01b0395909516845293905250205490565b600061035982610338610842565b906001600160e01b0319166000908152602091909152604090205460ff1690565b92915050565b61036d8686868686866108ee565b505050505050565b610390838383604051806020016040528060008152506108fc565b505050565b610390838383604051806020016040528060008152506109d2565b6001600160a01b0385163314806103cc57506103cc85336107a4565b6103e85760405162461bcd60e51b81526004016102ec90611bd3565b6103f63386868686866109f3565b5050505050565b61036d868686868686610a01565b606081518351146104705760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016102ec565b8251600080516020611eb08339815191529060009067ffffffffffffffff8111156104ab57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156104d4578160200160208202803683370190505b50905060005b85518110156106485760006001600160a01b031686828151811061050e57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031614156105875760405162461bcd60e51b815260206004820152603160248201527f455243313135353a2062617463682062616c616e636520717565727920666f7260448201527020746865207a65726f206164647265737360781b60648201526084016102ec565b8260008683815181106105aa57634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002060008783815181106105e257634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205482828151811061062b57634e487b7160e01b600052603260045260246000fd5b60209081029190910101528061064081611dad565b9150506104da565b50949350505050565b61036d8686868686866109f3565b61036d868686868686610b20565b61039083838360405180602001604052806000815250610cdb565b610390838383610cf6565b336001600160a01b03831614156106fe5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016102ec565b3360008181527f1799cf914cb0cb442ca7c7ac709ee40d0cb89e87351dc08d517fbda27d50c68c602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61039083838360405180602001604052806000815250610f10565b6001600160a01b0391821660009081527f1799cf914cb0cb442ca7c7ac709ee40d0cb89e87351dc08d517fbda27d50c68c6020908152604080832093909416825291909152205460ff1690565b6001600160a01b03851633148061080d575061080d85336107a4565b6108295760405162461bcd60e51b81526004016102ec90611bd3565b6103f63386868686866108ee565b610390838383611065565b7f326d0c59a7612f6a9919e2a8ee333c80ba689d8ba2634de89c85cbb04832e70590565b6001600160e01b031980831614156108c05760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e746572666163652069640000000060448201526064016102ec565b6001600160e01b03199190911660009081526020929092526040909120805460ff1916911515919091179055565b6103fd8686868686866111bc565b6001600160a01b0384166109225760405162461bcd60e51b81526004016102ec90611cec565b61093b3360008661093287611330565b6103f687611330565b6000838152600080516020611eb0833981519152602090815260408083206001600160a01b038816845291829052822080549192859261097c908490611d51565b909155505060408051858152602081018590526001600160a01b0387169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291015b60405180910390a45050505050565b6109e1336000868686866111bc565b6109ed848484846108fc565b50505050565b61065f868686868686611389565b6001600160a01b038416610a275760405162461bcd60e51b81526004016102ec90611c1c565b610a3686868661093287611330565b6000838152600080516020611eb0833981519152602081815260408084206001600160a01b038a1685529091529091205483811015610a875760405162461bcd60e51b81526004016102ec90611b88565b6000858152602083815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610ac4908490611d51565b909155505060408051868152602081018690526001600160a01b03808916928a821692918c16917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050505050565b6001600160a01b038416610b465760405162461bcd60e51b81526004016102ec90611c1c565b8151835114610b675760405162461bcd60e51b81526004016102ec90611ca4565b600080516020611eb083398151915260005b8451811015610c7a576000858281518110610ba457634e487b7160e01b600052603260045260246000fd5b602002602001015190506000858381518110610bd057634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815286835260408082206001600160a01b038e168352909352919091205490915081811015610c205760405162461bcd60e51b81526004016102ec90611b88565b6000838152602086815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610c5d908490611d51565b925050819055505050508080610c7290611dad565b915050610b79565b50846001600160a01b0316866001600160a01b0316886001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610cca929190611aff565b60405180910390a450505050505050565b610cea33600086868686611389565b6109ed84848484610f10565b6001600160a01b038316610d1c5760405162461bcd60e51b81526004016102ec90611c61565b8051825114610d3d5760405162461bcd60e51b81526004016102ec90611ca4565b6040805160208101909152600090819052600080516020611eb0833981519152905b8351811015610eb1576000848281518110610d8a57634e487b7160e01b600052603260045260246000fd5b60200260200101519050838281518110610db457634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600083815285835260408082206001600160a01b038b16835290935291909120541015610e3b5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016102ec565b838281518110610e5b57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600083815285835260408082206001600160a01b038b168352909352918220805491929091610e97908490611d69565b90915550829150610ea9905081611dad565b915050610d5f565b5060006001600160a01b0316846001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610f02929190611aff565b60405180910390a450505050565b6001600160a01b038416610f365760405162461bcd60e51b81526004016102ec90611cec565b8151835114610f575760405162461bcd60e51b81526004016102ec90611ca4565b600080516020611eb083398151915260005b8451811015611014576000858281518110610f9457634e487b7160e01b600052603260045260246000fd5b60200260200101519050848281518110610fbe57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600083815285835260408082206001600160a01b038c168352909352918220805491929091610ffa908490611d51565b9091555082915061100c905081611dad565b915050610f69565b50846001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516109c3929190611aff565b6001600160a01b03831661108b5760405162461bcd60e51b81526004016102ec90611c61565b6110ba3384600061109b86611330565b6110a486611330565b5050604080516020810190915260009052505050565b6000828152600080516020611eb0833981519152602090815260408083206001600160a01b038716845291829052909120548211156111495760405162461bcd60e51b815260206004820152602560248201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015264616e63657360d81b60648201526084016102ec565b6001600160a01b03841660009081526020829052604081208054849290611171908490611d69565b909155505060408051848152602081018490526000916001600160a01b0387169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629101610f02565b6001600160a01b0384163b1561036d5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906112009089908990889088908890600401611aa7565b602060405180830381600087803b15801561121a57600080fd5b505af192505050801561124a575060408051601f3d908101601f19168201909252611247918101906119a8565b60015b6112f757611256611df4565b806308c379a01415611290575061126b611e0c565b806112765750611292565b8060405162461bcd60e51b81526004016102ec9190611b2d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016102ec565b6001600160e01b0319811663f23a6e6160e01b146113275760405162461bcd60e51b81526004016102ec90611b40565b50505050505050565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061137857634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b1561036d5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906113cd9089908990889088908890600401611a49565b602060405180830381600087803b1580156113e757600080fd5b505af1925050508015611417575060408051601f3d908101601f19168201909252611414918101906119a8565b60015b61142357611256611df4565b6001600160e01b0319811663bc197c8160e01b146113275760405162461bcd60e51b81526004016102ec90611b40565b80356001600160a01b038116811461146a57600080fd5b919050565b600082601f83011261147f578081fd5b8135602061148c82611d2d565b6040516114998282611d80565b8381528281019150858301600585901b870184018810156114b8578586fd5b855b858110156114d6578135845292840192908401906001016114ba565b5090979650505050505050565b600082601f8301126114f3578081fd5b813567ffffffffffffffff81111561150d5761150d611dde565b604051611524601f8301601f191660200182611d80565b818152846020838601011115611538578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215611564578182fd5b61156d83611453565b915061157b60208401611453565b90509250929050565b60008060008060008060c0878903121561159c578182fd5b6115a587611453565b95506115b360208801611453565b94506115c160408801611453565b9350606087013567ffffffffffffffff808211156115dd578384fd5b6115e98a838b0161146f565b945060808901359150808211156115fe578384fd5b61160a8a838b0161146f565b935060a089013591508082111561161f578283fd5b5061162c89828a016114e3565b9150509295509295509295565b60008060008060008060c08789031215611651578182fd5b61165a87611453565b955061166860208801611453565b945061167660408801611453565b9350606087013592506080870135915060a087013567ffffffffffffffff81111561169f578182fd5b61162c89828a016114e3565b600080600080600060a086880312156116c2578081fd5b6116cb86611453565b94506116d960208701611453565b9350604086013567ffffffffffffffff808211156116f5578283fd5b61170189838a0161146f565b94506060880135915080821115611716578283fd5b61172289838a0161146f565b93506080880135915080821115611737578283fd5b50611744888289016114e3565b9150509295509295909350565b600080600080600060a08688031215611768578081fd5b61177186611453565b945061177f60208701611453565b93506040860135925060608601359150608086013567ffffffffffffffff8111156117a8578182fd5b611744888289016114e3565b6000806000606084860312156117c8578283fd5b6117d184611453565b9250602084013567ffffffffffffffff808211156117ed578384fd5b6117f98783880161146f565b9350604086013591508082111561180e578283fd5b5061181b8682870161146f565b9150509250925092565b60008060408385031215611837578182fd5b61184083611453565b915060208301358015158114611854578182fd5b809150509250929050565b60008060408385031215611871578182fd5b61187a83611453565b946020939093013593505050565b60008060006060848603121561189c578081fd5b6118a584611453565b95602085013595506040909401359392505050565b600080604083850312156118cc578182fd5b823567ffffffffffffffff808211156118e3578384fd5b818501915085601f8301126118f6578384fd5b8135602061190382611d2d565b6040516119108282611d80565b8381528281019150858301600585901b870184018b101561192f578889fd5b8896505b848710156119585761194481611453565b835260019690960195918301918301611933565b509650508601359250508082111561196e578283fd5b5061197b8582860161146f565b9150509250929050565b600060208284031215611996578081fd5b81356119a181611e96565b9392505050565b6000602082840312156119b9578081fd5b81516119a181611e96565b6000815180845260208085019450808401835b838110156119f3578151875295820195908201906001016119d7565b509495945050505050565b60008151808452815b81811015611a2357602081850181015186830182015201611a07565b81811115611a345782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090611a75908301866119c4565b8281036060840152611a8781866119c4565b90508281036080840152611a9b81856119fe565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611ae1908301846119fe565b979650505050505050565b6020815260006119a160208301846119c4565b604081526000611b1260408301856119c4565b8281036020840152611b2481856119c4565b95945050505050565b6020815260006119a160208301846119fe565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6020808252602b908201527f455243313135353a20696e73756666696369656e742062616c616e636573206660408201526a37b9103a3930b739b332b960a91b606082015260800190565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201526808185c1c1c9bdd995960ba1b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b600067ffffffffffffffff821115611d4757611d47611dde565b5060051b60200190565b60008219821115611d6457611d64611dc8565b500190565b600082821015611d7b57611d7b611dc8565b500390565b601f8201601f1916810167ffffffffffffffff81118282101715611da657611da6611dde565b6040525050565b6000600019821415611dc157611dc1611dc8565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d1115611e0957600481823e5160e01c5b90565b600060443d1015611e1a5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611e4a57505050505090565b8285019150815181811115611e625750505050505090565b843d8701016020828501011115611e7c5750505050505090565b611e8b60208286010187611d80565b509095945050505050565b6001600160e01b031981168114611eac57600080fd5b5056fe1799cf914cb0cb442ca7c7ac709ee40d0cb89e87351dc08d517fbda27d50c68ba2646970667358221220e3d262b61a93d374608906021013714710b52c12cead5a959e45bacecf2d131264736f6c63430008040033";

export class ERC1155BaseMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155BaseMock> {
    return super.deploy(overrides || {}) as Promise<ERC1155BaseMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155BaseMock {
    return super.attach(address) as ERC1155BaseMock;
  }
  connect(signer: Signer): ERC1155BaseMock__factory {
    return super.connect(signer) as ERC1155BaseMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BaseMockInterface {
    return new utils.Interface(_abi) as ERC1155BaseMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155BaseMock {
    return new Contract(address, _abi, signerOrProvider) as ERC1155BaseMock;
  }
}
