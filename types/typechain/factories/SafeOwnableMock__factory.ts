/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SafeOwnableMock,
  SafeOwnableMockInterface,
} from "../SafeOwnableMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nomineeOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103c93803806103c983398101604081905261002f9161009e565b6100578161004561005d60201b6102291760201c565b61008160201b61024d1790919060201c565b506100cc565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b81546001600160a01b0319166001600160a01b0391909116179055565b6000602082840312156100af578081fd5b81516001600160a01b03811681146100c5578182fd5b9392505050565b6102ee806100db6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806379ba5097146100515780638ab5150a1461005b5780638da5cb5b1461007f578063f2fde38b14610087575b600080fd5b61005961009a565b005b610063610186565b6040516001600160a01b03909116815260200160405180910390f35b6100636101a7565b61005961009536600461026a565b6101b1565b600080516020610299833981519152546001600160a01b031633146101185760405162461bcd60e51b815260206004820152602960248201527f536166654f776e61626c653a2073656e646572206d757374206265206e6f6d696044820152683732b29037bbb732b960b91b60648201526084015b60405180910390fd5b6000610122610229565b805460405191925033916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3610168813361024d565b61018360006000805160206102998339815191525b9061024d565b50565b60006000805160206102998339815191525b546001600160a01b0316919050565b6000610198610229565b6101b9610229565b546001600160a01b031633146102115760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161010f565b6101838160008051602061029983398151915261017d565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b81546001600160a01b0319166001600160a01b0391909116179055565b60006020828403121561027b578081fd5b81356001600160a01b0381168114610291578182fd5b939250505056fe24aa1f7b31fd188a8d3ecfb06bc55c806040e59b03bd4396283442fce6617890a26469706673582212203403a2717f88bfdb110107eae9960cf6e821592885678bfed6449a916a51c83564736f6c63430008040033";

export class SafeOwnableMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SafeOwnableMock> {
    return super.deploy(owner, overrides || {}) as Promise<SafeOwnableMock>;
  }
  getDeployTransaction(
    owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(owner, overrides || {});
  }
  attach(address: string): SafeOwnableMock {
    return super.attach(address) as SafeOwnableMock;
  }
  connect(signer: Signer): SafeOwnableMock__factory {
    return super.connect(signer) as SafeOwnableMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeOwnableMockInterface {
    return new utils.Interface(_abi) as SafeOwnableMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeOwnableMock {
    return new Contract(address, _abi, signerOrProvider) as SafeOwnableMock;
  }
}
