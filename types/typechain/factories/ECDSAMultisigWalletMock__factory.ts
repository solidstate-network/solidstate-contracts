/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ECDSAMultisigWalletMock,
  ECDSAMultisigWalletMockInterface,
} from "../ECDSAMultisigWalletMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "signers",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "quorum",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "delegate",
            type: "bool",
          },
        ],
        internalType: "struct ECDSAMultisigWallet.Parameters",
        name: "parameters",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct ECDSAMultisigWallet.Signature[]",
        name: "signatures",
        type: "tuple[]",
      },
    ],
    name: "verifyAndExecute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001243380380620012438339810160408190526200003491620002ce565b60006200004b620000d560201b620000aa1760201c565b905060005b8351811015620000b1576200009c8482815181106200007f57634e487b7160e01b600052603260045260246000fd5b602002602001015183620000f960201b620000ce1790919060201c565b80620000a881620003aa565b91505062000050565b50620000cc82826200019c60201b620001531790919060201c565b505050620003e8565b7fefbeb23122815a77e8a934c80d6f169b772e3a6471b982e51a98ff0d8fa5c7b790565b61010062000115836001016200023060201b620001d81760201c565b106200017a5760405162461bcd60e51b815260206004820152602960248201527f45434453414d756c746973696757616c6c65743a207369676e6572206c696d696044820152681d081c995858da195960ba1b60648201526084015b60405180910390fd5b6200019781836001016200024160201b620001e21790919060201c565b505050565b620001b5826001016200023060201b620001d81760201c565b8111156200022c5760405162461bcd60e51b815260206004820152603860248201527f45434453414d756c746973696757616c6c65743a20696e73756666696369656e60448201527f74207369676e65727320746f206d6565742071756f72756d0000000000000000606482015260840162000171565b9055565b60006200023b825490565b92915050565b600062000258836001600160a01b0384166200025f565b9392505050565b6000818152600183016020526040812054620002a8575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556200023b565b5060006200023b565b80516001600160a01b0381168114620002c957600080fd5b919050565b60008060408385031215620002e1578182fd5b82516001600160401b0380821115620002f8578384fd5b818501915085601f8301126200030c578384fd5b8151602082821115620003235762000323620003d2565b8160051b604051601f19603f830116810181811086821117156200034b576200034b620003d2565b604052838152828101945085830182870184018b10156200036a578889fd5b8896505b8487101562000397576200038281620002b1565b8652600196909601959483019483016200036e565b5097909101519698969750505050505050565b6000600019821415620003cb57634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b610e4b80620003f86000396000f3fe6080604052600436106100225760003560e01c806304887cf51461002e57600080fd5b3661002957005b600080fd5b61004161003c366004610a9f565b610057565b60405161004e9190610c0e565b60405180910390f35b606061009883600001518460200151856040015186606001516040516020016100839493929190610b70565b604051602081830303815290604052836101f7565b6100a183610514565b90505b92915050565b7fefbeb23122815a77e8a934c80d6f169b772e3a6471b982e51a98ff0d8fa5c7b790565b6101006100dd836001016101d8565b106101415760405162461bcd60e51b815260206004820152602960248201527f45434453414d756c746973696757616c6c65743a207369676e6572206c696d696044820152681d081c995858da195960ba1b60648201526084015b60405180910390fd5b61014e60018301826101e2565b505050565b61015f826001016101d8565b8111156101d45760405162461bcd60e51b815260206004820152603860248201527f45434453414d756c746973696757616c6c65743a20696e73756666696369656e60448201527f74207369676e65727320746f206d6565742071756f72756d00000000000000006064820152608401610138565b9055565b60006100a4825490565b60006100a1836001600160a01b03841661068f565b60006102016100aa565b90508060000154825110156102685760405162461bcd60e51b815260206004820152602760248201527f45434453414d756c746973696757616c6c65743a2071756f72756d206e6f74206044820152661c995858da195960ca1b6064820152608401610138565b6000805b835181101561050d57600084828151811061029757634e487b7160e01b600052603260045260246000fd5b60200260200101519050600061032d8260000151610327898560200151306040516020016102c793929190610bd5565b60408051601f1981840301815282825280516020918201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000084830152603c8085019190915282518085039091018152605c909301909152815191012090565b906106de565b9050600061033e6001870183610759565b905061010081106103ae5760405162461bcd60e51b815260206004820152603460248201527f45434453414d756c746973696757616c6c65743a207265636f766572656420736044820152731a59db995c881b9bdd08185d5d1a1bdc9a5e995960621b6064820152608401610138565b6020838101516001600160a01b038416600090815260038901835260408082209282529190925290205460ff16156104335760405162461bcd60e51b815260206004820152602260248201527f45434453414d756c746973696757616c6c65743a20696e76616c6964206e6f6e604482015261636560f01b6064820152608401610138565b6020838101516001600160a01b03841660009081526003890183526040808220928252919092529020805460ff19166001179055610472816002610cf6565b8516156104e05760405162461bcd60e51b815260206004820152603660248201527f45434453414d756c746973696757616c6c65743a207369676e65722063616e6e6044820152756f74207369676e206d6f7265207468616e206f6e636560501b6064820152608401610138565b6104eb816002610cf6565b6104f59086610c9b565b9450505050808061050590610dce565b91505061026c565b5050505050565b60606000606083606001511561060a573484604001511461059f576040805162461bcd60e51b81526020600482015260248101919091527f45434453414d756c746973696757616c6c65743a2064656c656761746563616c60448201527f6c2076616c7565206d757374206d61746368207369676e656420616d6f756e746064820152608401610138565b83600001516001600160a01b031684602001516040516105bf9190610bb9565b600060405180830381855af49150503d80600081146105fa576040519150601f19603f3d011682016040523d82523d6000602084013e6105ff565b606091505b509092509050610678565b83600001516001600160a01b03168460400151856020015160405161062f9190610bb9565b60006040518083038185875af1925050503d806000811461066c576040519150601f19603f3d011682016040523d82523d6000602084013e610671565b606091505b5090925090505b8115610685579392505050565b3d6000803e3d6000fd5b60008181526001830160205260408120546106d6575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556100a4565b5060006100a4565b600081516041146107315760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610138565b60208201516040830151606084015160001a61074f8682858561077d565b9695505050505050565b6001600160a01b0381166000908152600183016020526040812054600019016100a1565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156107fa5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610138565b8360ff16601b148061080f57508360ff16601c145b6108665760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610138565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa1580156108ba573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661091d5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610138565b95945050505050565b600082601f830112610936578081fd5b8135602067ffffffffffffffff8083111561095357610953610dff565b8260051b610962838201610c6a565b8481528381019087850183890186018a101561097c578788fd5b8793505b868410156109b957803585811115610996578889fd5b6109a48b88838d0101610a31565b84525060019390930192918501918501610980565b5098975050505050505050565b600082601f8301126109d6578081fd5b813567ffffffffffffffff8111156109f0576109f0610dff565b610a03601f8201601f1916602001610c6a565b818152846020838601011115610a17578283fd5b816020850160208301379081016020019190915292915050565b600060408284031215610a42578081fd5b6040516040810167ffffffffffffffff8282108183111715610a6657610a66610dff565b816040528293508435915080821115610a7e57600080fd5b50610a8b858286016109c6565b825250602083013560208201525092915050565b60008060408385031215610ab1578182fd5b823567ffffffffffffffff80821115610ac8578384fd5b9084019060808287031215610adb578384fd5b610ae3610c41565b82356001600160a01b0381168114610af9578586fd5b8152602083013582811115610b0c578586fd5b610b18888286016109c6565b60208301525060408301356040820152606083013592508215158314610b3c578485fd5b826060820152809450506020850135915080821115610b59578283fd5b50610b6685828601610926565b9150509250929050565b6bffffffffffffffffffffffff198560601b16815260008451610b9a816014850160208901610d9e565b909101601481019390935250151560f81b603482015260350192915050565b60008251610bcb818460208701610d9e565b9190910192915050565b60008451610be7818460208901610d9e565b919091019283525060601b6bffffffffffffffffffffffff19166020820152603401919050565b6020815260008251806020840152610c2d816040850160208701610d9e565b601f01601f19169190910160400192915050565b6040516080810167ffffffffffffffff81118282101715610c6457610c64610dff565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610c9357610c93610dff565b604052919050565b60008219821115610cae57610cae610de9565b500190565b600181815b80851115610cee578160001904821115610cd457610cd4610de9565b80851615610ce157918102915b93841c9390800290610cb8565b509250929050565b60006100a18383600082610d0c575060016100a4565b81610d19575060006100a4565b8160018114610d2f5760028114610d3957610d55565b60019150506100a4565b60ff841115610d4a57610d4a610de9565b50506001821b6100a4565b5060208310610133831016604e8410600b8410161715610d78575081810a6100a4565b610d828383610cb3565b8060001904821115610d9657610d96610de9565b029392505050565b60005b83811015610db9578181015183820152602001610da1565b83811115610dc8576000848401525b50505050565b6000600019821415610de257610de2610de9565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220c1a2e023f0e6e3335a20584f78e05980f22c1a5384c01b75adda9a0b670a853f64736f6c63430008040033";

export class ECDSAMultisigWalletMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    signers: string[],
    quorum: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ECDSAMultisigWalletMock> {
    return super.deploy(
      signers,
      quorum,
      overrides || {}
    ) as Promise<ECDSAMultisigWalletMock>;
  }
  getDeployTransaction(
    signers: string[],
    quorum: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(signers, quorum, overrides || {});
  }
  attach(address: string): ECDSAMultisigWalletMock {
    return super.attach(address) as ECDSAMultisigWalletMock;
  }
  connect(signer: Signer): ECDSAMultisigWalletMock__factory {
    return super.connect(signer) as ECDSAMultisigWalletMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ECDSAMultisigWalletMockInterface {
    return new utils.Interface(_abi) as ECDSAMultisigWalletMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ECDSAMultisigWalletMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ECDSAMultisigWalletMock;
  }
}
