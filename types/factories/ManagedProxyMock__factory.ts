/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ManagedProxyMock,
  ManagedProxyMockInterface,
} from "../ManagedProxyMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "manager",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "managerSelector",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "getImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "manager",
        type: "address",
      },
    ],
    name: "setManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161041e38038061041e83398101604081905261002f9161005f565b6001600160e01b03198116608052600080546001600160a01b0319166001600160a01b03841617905550506100af565b60008060408385031215610071578182fd5b82516001600160a01b0381168114610087578283fd5b60208401519092506001600160e01b0319811681146100a4578182fd5b809150509250929050565b6080516001600160e01b03191661034a6100d46000396000610164015261034a6000f3fe60806040526004361061002d5760003560e01c8063aaf10f42146100cf578063d0ebdbe71461010057610034565b3661003457005b600061003e61013f565b90506001600160a01b0381163b6100ab5760405162461bcd60e51b815260206004820152602660248201527f50726f78793a20696d706c656d656e746174696f6e206d75737420626520636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100ca573d6000f35b3d6000fd5b3480156100db57600080fd5b506100e4610275565b6040516001600160a01b03909116815260200160405180910390f35b34801561010c57600080fd5b5061013d61011b366004610284565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b005b60008060006101566000546001600160a01b031690565b6040516001600160e01b03197f00000000000000000000000000000000000000000000000000000000000000001660208201526001600160a01b03919091169060240160408051601f19818403018152908290526101b3916102c3565b600060405180830381855afa9150503d80600081146101ee576040519150601f19603f3d011682016040523d82523d6000602084013e6101f3565b606091505b50915091508161025a5760405162461bcd60e51b815260206004820152602c60248201527f4d616e6167656450726f78793a206661696c656420746f20666574636820696d60448201526b383632b6b2b73a30ba34b7b760a11b60648201526084016100a2565b8080602001905181019061026e91906102a7565b9250505090565b600061027f61013f565b905090565b600060208284031215610295578081fd5b81356102a0816102fc565b9392505050565b6000602082840312156102b8578081fd5b81516102a0816102fc565b60008251815b818110156102e357602081860181015185830152016102c9565b818111156102f15782828501525b509190910192915050565b6001600160a01b038116811461031157600080fd5b5056fea26469706673582212204465cffbfd9b6b89051ac652972ffe15dd303cc2f26a9871461cffdc8019ccf264736f6c63430008040033";

export class ManagedProxyMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    manager: string,
    managerSelector: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ManagedProxyMock> {
    return super.deploy(
      manager,
      managerSelector,
      overrides || {}
    ) as Promise<ManagedProxyMock>;
  }
  getDeployTransaction(
    manager: string,
    managerSelector: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      manager,
      managerSelector,
      overrides || {}
    );
  }
  attach(address: string): ManagedProxyMock {
    return super.attach(address) as ManagedProxyMock;
  }
  connect(signer: Signer): ManagedProxyMock__factory {
    return super.connect(signer) as ManagedProxyMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ManagedProxyMockInterface {
    return new utils.Interface(_abi) as ManagedProxyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ManagedProxyMock {
    return new Contract(address, _abi, signerOrProvider) as ManagedProxyMock;
  }
}
