/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20ExtendedMock,
  ERC20ExtendedMockInterface,
} from "../ERC20ExtendedMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b07806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a08231146101375780639dc29fac1461016d578063a457c2d714610180578063a9059cbb14610193578063dd62ed3e146101a657600080fd5b8063095ea7b3146100a357806318160ddd146100cb57806323b872dd146100fc578063395093511461010f57806340c10f1914610122575b600080fd5b6100b66100b1366004610a23565b6101ec565b60405190151581526020015b60405180910390f35b7fc991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b6545b6040519081526020016100c2565b6100b661010a3660046109e8565b610202565b6100b661011d366004610a23565b6102bc565b610135610130366004610a23565b61037f565b005b6100ee610145366004610995565b6001600160a01b03166000908152600080516020610a92833981519152602052604090205490565b61013561017b366004610a23565b61038d565b6100b661018e366004610a23565b610397565b6100b66101a1366004610a23565b61045b565b6100ee6101b43660046109b6565b6001600160a01b039182166000908152600080516020610ab28339815191526020908152604080832093909416825291909152205490565b60006101f9338484610468565b50600192915050565b6001600160a01b0383166000908152600080516020610ab283398151915260209081526040808320338452909152812054828110156102995760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6102a68533858403610468565b6102b185858561059a565b506001949350505050565b336000908152600080516020610ab2833981519152602090815260408083206001600160a01b03861684529182905282205483810181111561034b5760405162461bcd60e51b815260206004820152602260248201527f4552433230457874656e6465643a2065786365737369766520616c6c6f77616e604482015261636560f01b6064820152608401610290565b6102b133868684018560008a6001600160a01b03166001600160a01b03168152602001908152602001600020819055610468565b610389828261077a565b5050565b6103898282610883565b336000908152600080516020610ab2833981519152602090815260408083206001600160a01b038616845291829052822054808411156104275760405162461bcd60e51b815260206004820152602560248201527f4552433230457874656e6465643a20696e73756666696369656e7420616c6c6f60448201526477616e636560d81b6064820152608401610290565b6102b133868684038560008a6001600160a01b03166001600160a01b03168152602001908152602001600020819055610468565b60006101f933848461059a565b6001600160a01b0383166104ca5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610290565b6001600160a01b03821661052b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610290565b6001600160a01b038381166000818152600080516020610ab2833981519152602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166105fe5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610290565b6001600160a01b0382166106605760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610290565b6001600160a01b0383166000908152600080516020610a928339815191526020819052604090912054828110156106e85760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610290565b6001600160a01b0380861660009081526020849052604080822086850390559186168152908120805485929061071f908490610a4c565b92505081905550836001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161076b91815260200190565b60405180910390a35050505050565b6001600160a01b0382166107d05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610290565b7fc991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b68054600080516020610a92833981519152918391600090610813908490610a4c565b90915550506001600160a01b03831660009081526020829052604081208054849290610840908490610a4c565b90915550506040518281526001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161058d565b6001600160a01b0382166108e35760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610290565b6001600160a01b0382166000908152600080516020610a9283398151915260208190526040822080549192849261091b908490610a64565b92505081905550818160020160008282546109369190610a64565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161058d565b80356001600160a01b038116811461099057600080fd5b919050565b6000602082840312156109a6578081fd5b6109af82610979565b9392505050565b600080604083850312156109c8578081fd5b6109d183610979565b91506109df60208401610979565b90509250929050565b6000806000606084860312156109fc578081fd5b610a0584610979565b9250610a1360208501610979565b9150604084013590509250925092565b60008060408385031215610a35578182fd5b610a3e83610979565b946020939093013593505050565b60008219821115610a5f57610a5f610a7b565b500190565b600082821015610a7657610a76610a7b565b500390565b634e487b7160e01b600052601160045260246000fdfec991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b4c991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b5a264697066735822122085725d5834f313f6a766951bf39c99ef870b6e206401142fdd1a1516e297121a64736f6c63430008040033";

export class ERC20ExtendedMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20ExtendedMock> {
    return super.deploy(overrides || {}) as Promise<ERC20ExtendedMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20ExtendedMock {
    return super.attach(address) as ERC20ExtendedMock;
  }
  connect(signer: Signer): ERC20ExtendedMock__factory {
    return super.connect(signer) as ERC20ExtendedMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20ExtendedMockInterface {
    return new utils.Interface(_abi) as ERC20ExtendedMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20ExtendedMock {
    return new Contract(address, _abi, signerOrProvider) as ERC20ExtendedMock;
  }
}
