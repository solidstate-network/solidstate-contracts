/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1271StoredMock,
  ERC1271StoredMockInterface,
} from "../ERC1271StoredMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "__isValidSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "__setValidSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161041838038061041883398101604081905261002f9161008a565b600161004361006660201b6100f11760201c565b60009384526020526040909220805460ff19169215159290921790915550610177565b7f2247614a8e10a8cdf7e414e8cfdd55d59e5d45963b9b0ae5cab906b23c3d0e1190565b6000806040838503121561009c578182fd5b8251602080850151919350906001600160401b03808211156100bc578384fd5b818601915086601f8301126100cf578384fd5b8151818111156100e1576100e1610161565b604051601f8201601f19908116603f0116810190838211818310171561010957610109610161565b816040528281528986848701011115610120578687fd5b8693505b828410156101415784840186015181850187015292850192610124565b8284111561015157868684830101525b8096505050505050509250929050565b634e487b7160e01b600052604160045260246000fd5b610292806101866000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806306a70130146100465780631626ba7e1461005b57806399fcfa591461008c575b600080fd5b61005961005436600461015d565b6100af565b005b61006e610069366004610190565b6100bd565b6040516001600160e01b031990911681526020015b60405180910390f35b61009f61009a366004610190565b6100de565b6040519015158152602001610083565b6100b98282610115565b5050565b60006100c9838361013e565b156100d85750630b135d3f60e11b5b92915050565b60006100ea838361013e565b9392505050565b7f2247614a8e10a8cdf7e414e8cfdd55d59e5d45963b9b0ae5cab906b23c3d0e1190565b8061011e6100f1565b60009384526020526040909220805460ff19169215159290921790915550565b60006101486100f1565b60009384526020525050604090205460ff1690565b6000806040838503121561016f578182fd5b8235915060208301358015158114610185578182fd5b809150509250929050565b600080604083850312156101a2578182fd5b82359150602083013567ffffffffffffffff808211156101c0578283fd5b818501915085601f8301126101d3578283fd5b8135818111156101e5576101e5610246565b604051601f8201601f19908116603f0116810190838211818310171561020d5761020d610246565b81604052828152886020848701011115610225578586fd5b82602086016020830137856020848301015280955050505050509250929050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212201c94bc397c212a5468a742cb7edbe3c5b39f54e81d19e0532a61d53f0e34cdde64736f6c63430008040033";

export class ERC1271StoredMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    hash: BytesLike,
    signature: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1271StoredMock> {
    return super.deploy(
      hash,
      signature,
      overrides || {}
    ) as Promise<ERC1271StoredMock>;
  }
  getDeployTransaction(
    hash: BytesLike,
    signature: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(hash, signature, overrides || {});
  }
  attach(address: string): ERC1271StoredMock {
    return super.attach(address) as ERC1271StoredMock;
  }
  connect(signer: Signer): ERC1271StoredMock__factory {
    return super.connect(signer) as ERC1271StoredMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1271StoredMockInterface {
    return new utils.Interface(_abi) as ERC1271StoredMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1271StoredMock {
    return new Contract(address, _abi, signerOrProvider) as ERC1271StoredMock;
  }
}
