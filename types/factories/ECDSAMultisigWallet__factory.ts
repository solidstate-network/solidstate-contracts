/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ECDSAMultisigWallet,
  ECDSAMultisigWalletInterface,
} from "../ECDSAMultisigWallet";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "delegate",
            type: "bool",
          },
        ],
        internalType: "struct ECDSAMultisigWallet.Parameters",
        name: "parameters",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct ECDSAMultisigWallet.Signature[]",
        name: "signatures",
        type: "tuple[]",
      },
    ],
    name: "verifyAndExecute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

export class ECDSAMultisigWallet__factory {
  static readonly abi = _abi;
  static createInterface(): ECDSAMultisigWalletInterface {
    return new utils.Interface(_abi) as ECDSAMultisigWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ECDSAMultisigWallet {
    return new Contract(address, _abi, signerOrProvider) as ECDSAMultisigWallet;
  }
}
